"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[234],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(r),d=o,h=u["".concat(i,".").concat(d)]||u[d]||m[d]||a;return r?n.createElement(h,s(s({ref:t},l),{},{components:r})):n.createElement(h,s({ref:t},l))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[u]="string"==typeof e?e:o,s[1]=p;for(var c=2;c<a;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1876:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={},s="Docker Installation",p={unversionedId:"wrapper/docker",id:"wrapper/docker",title:"Docker Installation",description:"If you plan on using Docker, you can install our pre-configured Docker image. This image contains all the necessary",source:"@site/docs/wrapper/docker.md",sourceDirName:"wrapper",slug:"/wrapper/docker",permalink:"/docs/wrapper/docker",draft:!1,editUrl:"https://github.com/gnmyt/MCDash/tree/master/docs/docs/wrapper/docker.md",tags:[],version:"current",frontMatter:{},sidebar:"default",previous:{title:"Create a new server",permalink:"/docs/wrapper/create"}},i={},c=[{value:"Installation",id:"installation",level:2},{value:"Automatic Port Exposure",id:"automatic-port-exposure",level:3},{value:"Manual Port Exposure",id:"manual-port-exposure",level:3},{value:"Docker Compose",id:"docker-compose",level:2},{value:"Automatic Port Exposure",id:"automatic-port-exposure-1",level:3},{value:"Without Port Exposure",id:"without-port-exposure",level:3}],l={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker-installation"},"Docker Installation"),(0,o.kt)("p",null,"If you plan on using Docker, you can install our pre-configured Docker image. This image contains all the necessary\ndependencies to run the code in this repository."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("h3",{id:"automatic-port-exposure"},"Automatic Port Exposure"),(0,o.kt)("admonition",{title:"Important",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Using this method is not recommended for production environments. However, if you want a convenient way to run the\ncode in this repository, you can use the following command to expose the necessary ports to the host machine.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d -v mcdash:/app/data --restart=unless-stopped --network host --name MCDash germannewsmaker/mcdash\n")),(0,o.kt)("h3",{id:"manual-port-exposure"},"Manual Port Exposure"),(0,o.kt)("p",null,"If you want to manually expose the necessary ports to the host machine, you can use the following command."),(0,o.kt)("admonition",{title:"Note",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The port 7865 is used by the MCDash web interface. You still need to add the necessary port mappings for the\nminecraft servers.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d -v mcdash:/app/data --restart=unless-stopped -p 7865:7865 -p 25565:25565 --name MCDash germannewsmaker/mcdash\n")),(0,o.kt)("h2",{id:"docker-compose"},"Docker Compose"),(0,o.kt)("p",null,"If you want to use Docker Compose, you can use the following ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file."),(0,o.kt)("h3",{id:"automatic-port-exposure-1"},"Automatic Port Exposure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '3.7'\nservices:\n  mcdash:\n    image: germannewsmaker/mcdash\n    container_name: MCDash\n    restart: unless-stopped\n    volumes:\n      - mcdash:/app/data\n    network_mode: host\nvolumes:\n    mcdash:\n")),(0,o.kt)("h3",{id:"without-port-exposure"},"Without Port Exposure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '3.7'\nservices:\n  mcdash:\n    image: germannewsmaker/mcdash\n    container_name: MCDash\n    restart: unless-stopped\n    volumes:\n      - mcdash:/app/data\n    ports:\n      - 7865:7865\n      - 25565:25565 # Add the necessary port mappings for the minecraft servers\nvolumes:\n    mcdash:\n")))}m.isMDXComponent=!0}}]);